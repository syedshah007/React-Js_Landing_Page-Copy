name: React Auto CI/CD

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  build:
    name: Build, Test, and Deploy React App
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the project code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install project dependencies
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps

      # Step 5: Build the React app
      - name: Build the Project
        run: npm run build

      # Step 6: Set up Docker Buildx (for better builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 7: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 8: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: syedhassan11/react-app:latest

      # Step 9: Trigger ArgoCD Sync
      - name: Trigger ArgoCD Sync
        run: |
          curl -k -X POST "https://192.168.23.128:31155/api/v1/applications/react-app/sync" \
            -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}"
        continue-on-error: true  # Avoid breaking if ArgoCD is unavailable
